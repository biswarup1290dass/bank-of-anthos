version: 2.1

executors:
  python-docker-executor:
    docker:
      - image: cimg/base:stable
  java-docker-executor:
    docker:
      - image: cimg/maven:3.9.6-java17  # Maven + Java 17 for Jib/Skaffold

jobs:
  build-and-push:
    parameters:
      service:
        type: string
      executor_type:
        type: string
        default: "python-docker-executor"
    executor: << parameters.executor_type >>
    steps:
      - checkout

      # Install Skaffold only if needed
      - run:
          name: Install Skaffold
          command: |
            BUILD_PATH=""
            case "<< parameters.service >>" in
              accounts-db) BUILD_PATH="src/accounts/accounts-db" ;;
              contacts) BUILD_PATH="src/accounts/contacts" ;;
              userservice) BUILD_PATH="src/accounts/userservice" ;;
              frontend) BUILD_PATH="src/frontend" ;;
              balancereader) BUILD_PATH="src/ledger/balancereader" ;;
              ledgerwriter) BUILD_PATH="src/ledger/ledgerwriter" ;;
              transactionhistory) BUILD_PATH="src/ledger/transactionhistory" ;;
              ledger-db) BUILD_PATH="src/ledger/ledger-db" ;;
              loadgenerator) BUILD_PATH="src/loadgenerator" ;;
              *)
                echo "Unknown service: << parameters.service >>"
                exit 1
                ;;
            esac
            echo "export BUILD_PATH=$BUILD_PATH" >> $BASH_ENV

            if [ -f "$BUILD_PATH/skaffold.yaml" ]; then
              echo "Installing Skaffold..."
              curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
              chmod +x skaffold
              sudo mv skaffold /usr/local/bin/
            fi

      # Enable Docker builds
      - setup_remote_docker:
          docker_layer_caching: true

      # Build & push
      - run:
          name: Build and push Docker image
          command: |
            IMAGE_NAME="${DOCKER_REGISTRY}/${DOCKER_ORG}/bank-of-anthos-<< parameters.service >>"

            if [ -f "$BUILD_PATH/Dockerfile" ]; then
              echo "Building Dockerfile for << parameters.service >>"
              docker build -t "$IMAGE_NAME:latest" "$BUILD_PATH"
              docker tag "$IMAGE_NAME:latest" "$IMAGE_NAME:${CIRCLE_SHA1}"
              echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin $DOCKER_REGISTRY
              docker push "$IMAGE_NAME:latest"
              docker push "$IMAGE_NAME:${CIRCLE_SHA1}"
            elif [ -f "$BUILD_PATH/skaffold.yaml" ]; then
              echo "Building via Skaffold for << parameters.service >>"
              skaffold build -f "$BUILD_PATH/skaffold.yaml" --default-repo "$DOCKER_REGISTRY/$DOCKER_ORG"
            else
              echo "No Dockerfile or skaffold.yaml found for << parameters.service >>"
              exit 1
            fi

workflows:
  version: 2
  build-and-push-all:
    jobs:
      - build-and-push:
          matrix:
            parameters:
              service:
                - accounts-db
                - contacts
                - userservice
                - frontend
                - balancereader
                - ledgerwriter
                - transactionhistory
                - ledger-db
                - loadgenerator
              executor_type:
                - python-docker-executor
                - python-docker-executor
                - python-docker-executor
                - python-docker-executor
                - java-docker-executor
                - java-docker-executor
                - java-docker-executor
                - python-docker-executor
                - python-docker-executor
